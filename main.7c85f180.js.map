{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","headers","querySelectorAll","tableBody","tableRows","rows","fromUsdToNumber","str","replace","split","join","fromStringToUsd","toLocaleString","toCapitalLetters","words","i","length","toUpperCase","substr","sortSwitch","forEach","header","addEventListener","e","headerIndex","indexOf","target","sort","a","b","x","cells","innerText","y","localeCompare","append","elem","activeElem","classList","remove","parentElement","add","form","createElement","offices","innerHTML","map","office","body","pushNotification","title","description","type","message","h4","p","className","dataset","qa","style","cssText","textContent","margin","borderColor","color","setTimeout","preventDefault","newEmploee","cloneNode","formData","FormData","emploeeName","get","trim","position","age","salary","children","reset","elemValue","input","value","setAttribute","cellIndex","focus","select","option","saveData","char","isNaN","parseInt","alert","ev","code"],"mappings":"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","file":"main.7c85f180.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('thead th');\nconst tableBody = table.querySelector('tbody');\nconst tableRows = [...tableBody.rows];\n\nconst fromUsdToNumber = str => {\n  return +str.replace('$', '').split(',').join('');\n};\n\nconst fromStringToUsd = str => {\n  return '$' + (+str).toLocaleString();\n};\n\nconst toCapitalLetters = str => {\n  const words = str.split(' ');\n\n  for (let i = 0; i < words.length; i++) {\n    words[i] = words[i][0].toUpperCase() + words[i].substr(1);\n  }\n\n  return words.join(' ');\n};\n\n// ===============  1 sort table  ===================\n\nlet sortSwitch = 1;\n\nheaders.forEach(header => {\n  header.addEventListener('click', e => {\n    sortSwitch++;\n\n    const headerIndex = [...headers].indexOf(e.target);\n\n    tableRows.sort((a, b) => {\n      const x = a.cells[headerIndex].innerText;\n      const y = b.cells[headerIndex].innerText;\n\n      if (sortSwitch % 2 === 0) {\n        return fromUsdToNumber(x) - fromUsdToNumber(y) || x.localeCompare(y);\n      }\n\n      return fromUsdToNumber(y) - fromUsdToNumber(x) || y.localeCompare(x);\n    });\n\n    tableBody.append(...tableRows);\n  });\n});\n\n// ===============  2 select row  ===================\n\ntableBody.addEventListener('click', e => {\n  const elem = e.target;\n  const activeElem = tableBody.querySelector('tr.active');\n\n  if (activeElem) {\n    activeElem.classList.remove('active');\n  }\n  elem.parentElement.classList.add('active');\n});\n\n// ===============  3 create form  ===================\n\nconst form = document.createElement('form');\nconst offices = ['Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nform.classList.add('new-employee-form');\n\nform.innerHTML = `\n  <label>Name:\n    <input\n      type=\"text\"\n      name=\"name\"\n      pattern=\"[A-Za-z ]*\"\n      data-qa=\"name\"\n      required\n    >\n  </label>\n  <label>Position:\n    <input\n      type=\"text\"\n      name=\"position\"\n      minlength=\"4\"\n      maxlength = \"30\"\n      pattern=\"[A-Za-z ]*\"\n      data-qa=\"position\"\n      required\n    >\n  </label>\n  <label>Office:\n    <select\n      name=\"office\"\n      data-qa=\"office\" \n      required\n    >\n    ${offices.map(office => `\n      <option>${office}</option>\n    `).join()}\n    </select>\n  </label>\n  <label>Age:\n    <input\n      type=\"number\"\n      name=\"age\"\n      data-qa=\"age\"\n      required\n    >\n  </label>\n  <label>Salary:\n    <input\n      type=\"number\"\n      name=\"salary\"\n      min=\"10 000\"\n      max=\"999 999\"\n      data-qa=\"salary\"\n      required\n    >\n  </label>\n  <button type=\"submit\">\n    Save to table\n  </button>\n`;\n\ndocument.body.append(form);\n\n// ===============  4 show notification  ===================\n\nconst pushNotification = (title, description, type) => {\n  const message = document.createElement('div');\n  const h4 = document.createElement('h4');\n  const p = document.createElement('p');\n\n  message.className = type;\n  message.dataset.qa = 'notification';\n\n  message.style.cssText = `\n    box-sizing: content-box;\n    padding: 10px;\n    margin-top: 16px;\n    border: 1px solid;\n    border-radius: 10px;\n  `;\n\n  h4.textContent = title;\n  h4.style.margin = '0';\n  p.textContent = description;\n  p.style.cssText = `margin: 0; padding-top: 10px; line-height: 1.5;`;\n\n  if (type === 'error') {\n    message.style.borderColor = 'red';\n    h4.style.color = 'red';\n  } else {\n    message.style.borderColor = 'green';\n    h4.style.color = 'green';\n  }\n\n  message.append(h4, p);\n  form.append(message);\n  setTimeout(() => message.remove(), 2000);\n};\n\n// ===============  add employee  ===================\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const newEmploee = tableRows[1].cloneNode(true);\n\n  const formData = new FormData(form);\n  const emploeeName = formData.get('name').trim();\n  const position = formData.get('position').trim();\n  const office = formData.get('office');\n  const age = formData.get('age');\n  const salary = fromStringToUsd(formData.get('salary'));\n\n  newEmploee.children[0].innerText = emploeeName;\n  newEmploee.children[1].innerText = position;\n  newEmploee.children[2].innerText = office;\n  newEmploee.children[3].innerText = age;\n  newEmploee.children[4].innerText = salary;\n\n  if (emploeeName.length < 4) {\n    pushNotification('ERROR!!!',\n      'Name should contain at least 4 letters',\n      'error'\n    );\n  }\n\n  if (age < 18 || age > 90) {\n    pushNotification('ERROR!!!',\n      'Employee must be between 18 and 90 years old',\n      'error'\n    );\n  }\n\n  if (emploeeName.length >= 4 && age >= 18 && age <= 90) {\n    pushNotification('SUCCESS!!!',\n      'Employee was added to database',\n      'success'\n    );\n\n    tableBody.append(newEmploee);\n\n    form.reset();\n  }\n});\n\n// ===============  5 edit the table  ===================\n\ntableBody.addEventListener('dblclick', e => {\n  const elem = e.target;\n  const elemValue = elem.innerText;\n\n  const input = document.createElement('input');\n\n  input.className = 'cell-input';\n  input.value = elemValue;\n  input.setAttribute('value', elemValue);\n\n  if (elem.cellIndex === 3) {\n    input.type = 'number';\n  }\n\n  if (elem.cellIndex === 4) {\n    input.value = fromUsdToNumber(elemValue);\n    input.type = 'number';\n  }\n  elem.innerText = '';\n  elem.append(input);\n  input.focus();\n\n  const select = document.createElement('select');\n\n  select.classList.add('cell-input');\n\n  for (const office of offices) {\n    const option = document.createElement('option');\n\n    option.innerText = office;\n    select.append(option);\n  }\n\n  if (elem.cellIndex === 2) {\n    elem.innerText = '';\n    elem.append(select);\n  }\n  select.focus();\n\n  const saveData = () => {\n    if (elem.cellIndex === 0 || elem.cellIndex === 1) {\n      if (!input.value) {\n        elem.innerText = elemValue;\n      }\n\n      for (const char of input.value) {\n        if (!isNaN(parseInt(char))) {\n          alert('Name should contain only letters');\n          input.value = elemValue;\n          break;\n        }\n      }\n      elem.innerText = toCapitalLetters(input.value);\n    }\n\n    if (elem.cellIndex === 2) {\n      elem.innerHTML = '';\n      elem.innerText = select.value;\n    }\n\n    if (elem.cellIndex === 3) {\n      if (input.value < 18 || input.value > 90) {\n        alert('Employee must be between 18 and 90 years old');\n        input.value = elemValue;\n      }\n      elem.innerText = input.value;\n    }\n\n    if (elem.cellIndex === 4) {\n      if (!input.value) {\n        elem.innerText = elemValue;\n      }\n      elem.innerText = fromStringToUsd(input.value);\n    }\n  };\n\n  input.addEventListener('blur', saveData);\n\n  input.addEventListener('keydown', ev => {\n    if (ev.code === 'Enter') {\n      saveData();\n    }\n  });\n\n  select.addEventListener('blur', saveData);\n\n  select.addEventListener('keydown', ev => {\n    if (ev.code === 'Enter') {\n      saveData();\n    }\n  });\n});\n"]}